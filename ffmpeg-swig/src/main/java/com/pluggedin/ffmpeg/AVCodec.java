/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVCodec {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVCodec(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVCodec obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVCodec(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setName(String value) {
    ffmpegJNI.AVCodec_name_set(swigCPtr, this, value);
  }

  public String getName() {
    return ffmpegJNI.AVCodec_name_get(swigCPtr, this);
  }

  public void setType(AVMediaType value) {
    ffmpegJNI.AVCodec_type_set(swigCPtr, this, value.swigValue());
  }

  public AVMediaType getType() {
    return AVMediaType.swigToEnum(ffmpegJNI.AVCodec_type_get(swigCPtr, this));
  }

  public void setId(CodecID value) {
    ffmpegJNI.AVCodec_id_set(swigCPtr, this, value.swigValue());
  }

  public CodecID getId() {
    return CodecID.swigToEnum(ffmpegJNI.AVCodec_id_get(swigCPtr, this));
  }

  public void setPriv_data_size(int value) {
    ffmpegJNI.AVCodec_priv_data_size_set(swigCPtr, this, value);
  }

  public int getPriv_data_size() {
    return ffmpegJNI.AVCodec_priv_data_size_get(swigCPtr, this);
  }

  public void setInit(SWIGTYPE_p_f_p_struct_AVCodecContext__int value) {
    ffmpegJNI.AVCodec_init_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext__int getInit() {
    long cPtr = ffmpegJNI.AVCodec_init_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext__int(cPtr, false);
  }

  public void setEncode(SWIGTYPE_p_f_p_struct_AVCodecContext_p_unsigned_char_int_p_void__int value) {
    ffmpegJNI.AVCodec_encode_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext_p_unsigned_char_int_p_void__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext_p_unsigned_char_int_p_void__int getEncode() {
    long cPtr = ffmpegJNI.AVCodec_encode_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext_p_unsigned_char_int_p_void__int(cPtr, false);
  }

  public void setClose(SWIGTYPE_p_f_p_struct_AVCodecContext__int value) {
    ffmpegJNI.AVCodec_close_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext__int getClose() {
    long cPtr = ffmpegJNI.AVCodec_close_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext__int(cPtr, false);
  }

  public void setDecode(SWIGTYPE_p_f_p_struct_AVCodecContext_p_void_p_int_p_struct_AVPacket__int value) {
    ffmpegJNI.AVCodec_decode_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext_p_void_p_int_p_struct_AVPacket__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext_p_void_p_int_p_struct_AVPacket__int getDecode() {
    long cPtr = ffmpegJNI.AVCodec_decode_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext_p_void_p_int_p_struct_AVPacket__int(cPtr, false);
  }

  public void setCapabilities(int value) {
    ffmpegJNI.AVCodec_capabilities_set(swigCPtr, this, value);
  }

  public int getCapabilities() {
    return ffmpegJNI.AVCodec_capabilities_get(swigCPtr, this);
  }

  public void setNext(AVCodec value) {
    ffmpegJNI.AVCodec_next_set(swigCPtr, this, AVCodec.getCPtr(value), value);
  }

  public AVCodec getNext() {
    long cPtr = ffmpegJNI.AVCodec_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVCodec(cPtr, false);
  }

  public void setFlush(SWIGTYPE_p_f_p_struct_AVCodecContext__void value) {
    ffmpegJNI.AVCodec_flush_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext__void getFlush() {
    long cPtr = ffmpegJNI.AVCodec_flush_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext__void(cPtr, false);
  }

  public void setSupported_framerates(SWIGTYPE_p_AVRational value) {
    ffmpegJNI.AVCodec_supported_framerates_set(swigCPtr, this, SWIGTYPE_p_AVRational.getCPtr(value));
  }

  public SWIGTYPE_p_AVRational getSupported_framerates() {
    long cPtr = ffmpegJNI.AVCodec_supported_framerates_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVRational(cPtr, false);
  }

  public void setPix_fmts(SWIGTYPE_p_PixelFormat value) {
    ffmpegJNI.AVCodec_pix_fmts_set(swigCPtr, this, SWIGTYPE_p_PixelFormat.getCPtr(value));
  }

  public SWIGTYPE_p_PixelFormat getPix_fmts() {
    long cPtr = ffmpegJNI.AVCodec_pix_fmts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_PixelFormat(cPtr, false);
  }

  public void setLong_name(String value) {
    ffmpegJNI.AVCodec_long_name_set(swigCPtr, this, value);
  }

  public String getLong_name() {
    return ffmpegJNI.AVCodec_long_name_get(swigCPtr, this);
  }

  public void setSupported_samplerates(SWIGTYPE_p_int value) {
    ffmpegJNI.AVCodec_supported_samplerates_set(swigCPtr, this, SWIGTYPE_p_int.getCPtr(value));
  }

  public SWIGTYPE_p_int getSupported_samplerates() {
    long cPtr = ffmpegJNI.AVCodec_supported_samplerates_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public void setSample_fmts(SWIGTYPE_p_AVSampleFormat value) {
    ffmpegJNI.AVCodec_sample_fmts_set(swigCPtr, this, SWIGTYPE_p_AVSampleFormat.getCPtr(value));
  }

  public SWIGTYPE_p_AVSampleFormat getSample_fmts() {
    long cPtr = ffmpegJNI.AVCodec_sample_fmts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVSampleFormat(cPtr, false);
  }

  public void setChannel_layouts(SWIGTYPE_p_unsigned_long_long value) {
    ffmpegJNI.AVCodec_channel_layouts_set(swigCPtr, this, SWIGTYPE_p_unsigned_long_long.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_long_long getChannel_layouts() {
    long cPtr = ffmpegJNI.AVCodec_channel_layouts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_long_long(cPtr, false);
  }

  public void setMax_lowres(short value) {
    ffmpegJNI.AVCodec_max_lowres_set(swigCPtr, this, value);
  }

  public short getMax_lowres() {
    return ffmpegJNI.AVCodec_max_lowres_get(swigCPtr, this);
  }

  public void setPriv_class(SWIGTYPE_p_AVClass value) {
    ffmpegJNI.AVCodec_priv_class_set(swigCPtr, this, SWIGTYPE_p_AVClass.getCPtr(value));
  }

  public SWIGTYPE_p_AVClass getPriv_class() {
    long cPtr = ffmpegJNI.AVCodec_priv_class_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVClass(cPtr, false);
  }

  public void setProfiles(AVProfile value) {
    ffmpegJNI.AVCodec_profiles_set(swigCPtr, this, AVProfile.getCPtr(value), value);
  }

  public AVProfile getProfiles() {
    long cPtr = ffmpegJNI.AVCodec_profiles_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVProfile(cPtr, false);
  }

  public void setInit_thread_copy(SWIGTYPE_p_f_p_struct_AVCodecContext__int value) {
    ffmpegJNI.AVCodec_init_thread_copy_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext__int getInit_thread_copy() {
    long cPtr = ffmpegJNI.AVCodec_init_thread_copy_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext__int(cPtr, false);
  }

  public void setUpdate_thread_context(SWIGTYPE_p_f_p_struct_AVCodecContext_p_q_const__struct_AVCodecContext__int value) {
    ffmpegJNI.AVCodec_update_thread_context_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodecContext_p_q_const__struct_AVCodecContext__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodecContext_p_q_const__struct_AVCodecContext__int getUpdate_thread_context() {
    long cPtr = ffmpegJNI.AVCodec_update_thread_context_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodecContext_p_q_const__struct_AVCodecContext__int(cPtr, false);
  }

  public void setDefaults(SWIGTYPE_p_AVCodecDefault value) {
    ffmpegJNI.AVCodec_defaults_set(swigCPtr, this, SWIGTYPE_p_AVCodecDefault.getCPtr(value));
  }

  public SWIGTYPE_p_AVCodecDefault getDefaults() {
    long cPtr = ffmpegJNI.AVCodec_defaults_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVCodecDefault(cPtr, false);
  }

  public void setInit_static_data(SWIGTYPE_p_f_p_struct_AVCodec__void value) {
    ffmpegJNI.AVCodec_init_static_data_set(swigCPtr, this, SWIGTYPE_p_f_p_struct_AVCodec__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVCodec__void getInit_static_data() {
    long cPtr = ffmpegJNI.AVCodec_init_static_data_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVCodec__void(cPtr, false);
  }

  public AVCodec() {
    this(ffmpegJNI.new_AVCodec(), true);
  }

}
