/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVStream {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVStream(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVStream obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVStream(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setIndex(int value) {
    ffmpegJNI.AVStream_index_set(swigCPtr, this, value);
  }

  public int getIndex() {
    return ffmpegJNI.AVStream_index_get(swigCPtr, this);
  }

  public void setId(int value) {
    ffmpegJNI.AVStream_id_set(swigCPtr, this, value);
  }

  public int getId() {
    return ffmpegJNI.AVStream_id_get(swigCPtr, this);
  }

  public void setCodec(AVCodecContext value) {
    ffmpegJNI.AVStream_codec_set(swigCPtr, this, AVCodecContext.getCPtr(value), value);
  }

  public AVCodecContext getCodec() {
    long cPtr = ffmpegJNI.AVStream_codec_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVCodecContext(cPtr, false);
  }

  public void setR_frame_rate(SWIGTYPE_p_AVRational value) {
    ffmpegJNI.AVStream_r_frame_rate_set(swigCPtr, this, SWIGTYPE_p_AVRational.getCPtr(value));
  }

  public SWIGTYPE_p_AVRational getR_frame_rate() {
    return new SWIGTYPE_p_AVRational(ffmpegJNI.AVStream_r_frame_rate_get(swigCPtr, this), true);
  }

  public void setPriv_data(long value) {
    ffmpegJNI.AVStream_priv_data_set(swigCPtr, this, value);
  }

  public long getPriv_data() {
    return ffmpegJNI.AVStream_priv_data_get(swigCPtr, this);
  }

  public void setPts(AVFrac value) {
    ffmpegJNI.AVStream_pts_set(swigCPtr, this, AVFrac.getCPtr(value), value);
  }

  public AVFrac getPts() {
    long cPtr = ffmpegJNI.AVStream_pts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVFrac(cPtr, false);
  }

  public void setTime_base(SWIGTYPE_p_AVRational value) {
    ffmpegJNI.AVStream_time_base_set(swigCPtr, this, SWIGTYPE_p_AVRational.getCPtr(value));
  }

  public SWIGTYPE_p_AVRational getTime_base() {
    return new SWIGTYPE_p_AVRational(ffmpegJNI.AVStream_time_base_get(swigCPtr, this), true);
  }

  public void setDiscard(AVDiscard value) {
    ffmpegJNI.AVStream_discard_set(swigCPtr, this, value.swigValue());
  }

  public AVDiscard getDiscard() {
    return AVDiscard.swigToEnum(ffmpegJNI.AVStream_discard_get(swigCPtr, this));
  }

  public void setStart_time(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_start_time_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getStart_time() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_start_time_get(swigCPtr, this), true);
  }

  public void setDuration(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_duration_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getDuration() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_duration_get(swigCPtr, this), true);
  }

  public void setNb_frames(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_nb_frames_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getNb_frames() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_nb_frames_get(swigCPtr, this), true);
  }

  public void setDisposition(int value) {
    ffmpegJNI.AVStream_disposition_set(swigCPtr, this, value);
  }

  public int getDisposition() {
    return ffmpegJNI.AVStream_disposition_get(swigCPtr, this);
  }

  public void setSample_aspect_ratio(SWIGTYPE_p_AVRational value) {
    ffmpegJNI.AVStream_sample_aspect_ratio_set(swigCPtr, this, SWIGTYPE_p_AVRational.getCPtr(value));
  }

  public SWIGTYPE_p_AVRational getSample_aspect_ratio() {
    return new SWIGTYPE_p_AVRational(ffmpegJNI.AVStream_sample_aspect_ratio_get(swigCPtr, this), true);
  }

  public void setMetadata(SWIGTYPE_p_AVDictionary value) {
    ffmpegJNI.AVStream_metadata_set(swigCPtr, this, SWIGTYPE_p_AVDictionary.getCPtr(value));
  }

  public SWIGTYPE_p_AVDictionary getMetadata() {
    long cPtr = ffmpegJNI.AVStream_metadata_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVDictionary(cPtr, false);
  }

  public void setAvg_frame_rate(SWIGTYPE_p_AVRational value) {
    ffmpegJNI.AVStream_avg_frame_rate_set(swigCPtr, this, SWIGTYPE_p_AVRational.getCPtr(value));
  }

  public SWIGTYPE_p_AVRational getAvg_frame_rate() {
    return new SWIGTYPE_p_AVRational(ffmpegJNI.AVStream_avg_frame_rate_get(swigCPtr, this), true);
  }

  public void setCodec_info_nb_frames(int value) {
    ffmpegJNI.AVStream_codec_info_nb_frames_set(swigCPtr, this, value);
  }

  public int getCodec_info_nb_frames() {
    return ffmpegJNI.AVStream_codec_info_nb_frames_get(swigCPtr, this);
  }

  public void setStream_identifier(int value) {
    ffmpegJNI.AVStream_stream_identifier_set(swigCPtr, this, value);
  }

  public int getStream_identifier() {
    return ffmpegJNI.AVStream_stream_identifier_get(swigCPtr, this);
  }

  public void setInterleaver_chunk_size(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_interleaver_chunk_size_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getInterleaver_chunk_size() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_interleaver_chunk_size_get(swigCPtr, this), true);
  }

  public void setInterleaver_chunk_duration(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_interleaver_chunk_duration_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getInterleaver_chunk_duration() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_interleaver_chunk_duration_get(swigCPtr, this), true);
  }

  public void setRequest_probe(int value) {
    ffmpegJNI.AVStream_request_probe_set(swigCPtr, this, value);
  }

  public int getRequest_probe() {
    return ffmpegJNI.AVStream_request_probe_get(swigCPtr, this);
  }

  public void setCur_ptr(SWIGTYPE_p_uint8_t value) {
    ffmpegJNI.AVStream_cur_ptr_set(swigCPtr, this, SWIGTYPE_p_uint8_t.getCPtr(value));
  }

  public SWIGTYPE_p_uint8_t getCur_ptr() {
    long cPtr = ffmpegJNI.AVStream_cur_ptr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_uint8_t(cPtr, false);
  }

  public void setCur_len(int value) {
    ffmpegJNI.AVStream_cur_len_set(swigCPtr, this, value);
  }

  public int getCur_len() {
    return ffmpegJNI.AVStream_cur_len_get(swigCPtr, this);
  }

  public void setCur_pkt(AVPacket value) {
    ffmpegJNI.AVStream_cur_pkt_set(swigCPtr, this, AVPacket.getCPtr(value), value);
  }

  public AVPacket getCur_pkt() {
    long cPtr = ffmpegJNI.AVStream_cur_pkt_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVPacket(cPtr, false);
  }

  public void setReference_dts(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_reference_dts_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getReference_dts() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_reference_dts_get(swigCPtr, this), true);
  }

  public void setFirst_dts(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_first_dts_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getFirst_dts() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_first_dts_get(swigCPtr, this), true);
  }

  public void setCur_dts(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_cur_dts_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getCur_dts() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_cur_dts_get(swigCPtr, this), true);
  }

  public void setLast_IP_duration(int value) {
    ffmpegJNI.AVStream_last_IP_duration_set(swigCPtr, this, value);
  }

  public int getLast_IP_duration() {
    return ffmpegJNI.AVStream_last_IP_duration_get(swigCPtr, this);
  }

  public void setLast_IP_pts(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_last_IP_pts_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getLast_IP_pts() {
    return new SWIGTYPE_p_int64_t(ffmpegJNI.AVStream_last_IP_pts_get(swigCPtr, this), true);
  }

  public void setProbe_packets(int value) {
    ffmpegJNI.AVStream_probe_packets_set(swigCPtr, this, value);
  }

  public int getProbe_packets() {
    return ffmpegJNI.AVStream_probe_packets_get(swigCPtr, this);
  }

  public void setLast_in_packet_buffer(AVPacketList value) {
    ffmpegJNI.AVStream_last_in_packet_buffer_set(swigCPtr, this, AVPacketList.getCPtr(value), value);
  }

  public AVPacketList getLast_in_packet_buffer() {
    long cPtr = ffmpegJNI.AVStream_last_in_packet_buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVPacketList(cPtr, false);
  }

  public void setProbe_data(AVProbeData value) {
    ffmpegJNI.AVStream_probe_data_set(swigCPtr, this, AVProbeData.getCPtr(value), value);
  }

  public AVProbeData getProbe_data() {
    long cPtr = ffmpegJNI.AVStream_probe_data_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVProbeData(cPtr, false);
  }

  public void setPts_buffer(SWIGTYPE_p_int64_t value) {
    ffmpegJNI.AVStream_pts_buffer_set(swigCPtr, this, SWIGTYPE_p_int64_t.getCPtr(value));
  }

  public SWIGTYPE_p_int64_t getPts_buffer() {
    long cPtr = ffmpegJNI.AVStream_pts_buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int64_t(cPtr, false);
  }

  public void setNeed_parsing(AVStreamParseType value) {
    ffmpegJNI.AVStream_need_parsing_set(swigCPtr, this, value.swigValue());
  }

  public AVStreamParseType getNeed_parsing() {
    return AVStreamParseType.swigToEnum(ffmpegJNI.AVStream_need_parsing_get(swigCPtr, this));
  }

  public void setParser(AVCodecParserContext value) {
    ffmpegJNI.AVStream_parser_set(swigCPtr, this, AVCodecParserContext.getCPtr(value), value);
  }

  public AVCodecParserContext getParser() {
    long cPtr = ffmpegJNI.AVStream_parser_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVCodecParserContext(cPtr, false);
  }

  public void setIndex_entries(AVIndexEntry value) {
    ffmpegJNI.AVStream_index_entries_set(swigCPtr, this, AVIndexEntry.getCPtr(value), value);
  }

  public AVIndexEntry getIndex_entries() {
    long cPtr = ffmpegJNI.AVStream_index_entries_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVIndexEntry(cPtr, false);
  }

  public void setNb_index_entries(int value) {
    ffmpegJNI.AVStream_nb_index_entries_set(swigCPtr, this, value);
  }

  public int getNb_index_entries() {
    return ffmpegJNI.AVStream_nb_index_entries_get(swigCPtr, this);
  }

  public void setIndex_entries_allocated_size(long value) {
    ffmpegJNI.AVStream_index_entries_allocated_size_set(swigCPtr, this, value);
  }

  public long getIndex_entries_allocated_size() {
    return ffmpegJNI.AVStream_index_entries_allocated_size_get(swigCPtr, this);
  }

  public void setPts_wrap_bits(int value) {
    ffmpegJNI.AVStream_pts_wrap_bits_set(swigCPtr, this, value);
  }

  public int getPts_wrap_bits() {
    return ffmpegJNI.AVStream_pts_wrap_bits_get(swigCPtr, this);
  }

  public AVStream_info getInfo() {
    long cPtr = ffmpegJNI.AVStream_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVStream_info(cPtr, false);
  }

  public AVStream() {
    this(ffmpegJNI.new_AVStream(), true);
  }

}
