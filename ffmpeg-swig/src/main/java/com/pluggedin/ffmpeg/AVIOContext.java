/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVIOContext {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVIOContext(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVIOContext obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVIOContext(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setBuffer(SWIGTYPE_p_unsigned_char value) {
    ffmpegJNI.AVIOContext_buffer_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getBuffer() {
    long cPtr = ffmpegJNI.AVIOContext_buffer_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setBuffer_size(int value) {
    ffmpegJNI.AVIOContext_buffer_size_set(swigCPtr, this, value);
  }

  public int getBuffer_size() {
    return ffmpegJNI.AVIOContext_buffer_size_get(swigCPtr, this);
  }

  public void setBuf_ptr(SWIGTYPE_p_unsigned_char value) {
    ffmpegJNI.AVIOContext_buf_ptr_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getBuf_ptr() {
    long cPtr = ffmpegJNI.AVIOContext_buf_ptr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setBuf_end(SWIGTYPE_p_unsigned_char value) {
    ffmpegJNI.AVIOContext_buf_end_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getBuf_end() {
    long cPtr = ffmpegJNI.AVIOContext_buf_end_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setOpaque(long value) {
    ffmpegJNI.AVIOContext_opaque_set(swigCPtr, this, value);
  }

  public long getOpaque() {
    return ffmpegJNI.AVIOContext_opaque_get(swigCPtr, this);
  }

  public void setRead_packet(SWIGTYPE_p_f_p_void_p_unsigned_char_int__int value) {
    ffmpegJNI.AVIOContext_read_packet_set(swigCPtr, this, SWIGTYPE_p_f_p_void_p_unsigned_char_int__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_p_unsigned_char_int__int getRead_packet() {
    long cPtr = ffmpegJNI.AVIOContext_read_packet_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_p_unsigned_char_int__int(cPtr, false);
  }

  public void setWrite_packet(SWIGTYPE_p_f_p_void_p_unsigned_char_int__int value) {
    ffmpegJNI.AVIOContext_write_packet_set(swigCPtr, this, SWIGTYPE_p_f_p_void_p_unsigned_char_int__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_p_unsigned_char_int__int getWrite_packet() {
    long cPtr = ffmpegJNI.AVIOContext_write_packet_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_p_unsigned_char_int__int(cPtr, false);
  }

  public void setSeek(SWIGTYPE_p_f_p_void_long_long_int__long_long value) {
    ffmpegJNI.AVIOContext_seek_set(swigCPtr, this, SWIGTYPE_p_f_p_void_long_long_int__long_long.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_long_long_int__long_long getSeek() {
    long cPtr = ffmpegJNI.AVIOContext_seek_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_long_long_int__long_long(cPtr, false);
  }

  public void setPos(long value) {
    ffmpegJNI.AVIOContext_pos_set(swigCPtr, this, value);
  }

  public long getPos() {
    return ffmpegJNI.AVIOContext_pos_get(swigCPtr, this);
  }

  public void setMust_flush(int value) {
    ffmpegJNI.AVIOContext_must_flush_set(swigCPtr, this, value);
  }

  public int getMust_flush() {
    return ffmpegJNI.AVIOContext_must_flush_get(swigCPtr, this);
  }

  public void setEof_reached(int value) {
    ffmpegJNI.AVIOContext_eof_reached_set(swigCPtr, this, value);
  }

  public int getEof_reached() {
    return ffmpegJNI.AVIOContext_eof_reached_get(swigCPtr, this);
  }

  public void setWrite_flag(int value) {
    ffmpegJNI.AVIOContext_write_flag_set(swigCPtr, this, value);
  }

  public int getWrite_flag() {
    return ffmpegJNI.AVIOContext_write_flag_get(swigCPtr, this);
  }

  public void setMax_packet_size(int value) {
    ffmpegJNI.AVIOContext_max_packet_size_set(swigCPtr, this, value);
  }

  public int getMax_packet_size() {
    return ffmpegJNI.AVIOContext_max_packet_size_get(swigCPtr, this);
  }

  public void setChecksum(long value) {
    ffmpegJNI.AVIOContext_checksum_set(swigCPtr, this, value);
  }

  public long getChecksum() {
    return ffmpegJNI.AVIOContext_checksum_get(swigCPtr, this);
  }

  public void setChecksum_ptr(SWIGTYPE_p_unsigned_char value) {
    ffmpegJNI.AVIOContext_checksum_ptr_set(swigCPtr, this, SWIGTYPE_p_unsigned_char.getCPtr(value));
  }

  public SWIGTYPE_p_unsigned_char getChecksum_ptr() {
    long cPtr = ffmpegJNI.AVIOContext_checksum_ptr_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public void setUpdate_checksum(SWIGTYPE_p_f_unsigned_long_p_q_const__unsigned_char_unsigned_int__unsigned_long value) {
    ffmpegJNI.AVIOContext_update_checksum_set(swigCPtr, this, SWIGTYPE_p_f_unsigned_long_p_q_const__unsigned_char_unsigned_int__unsigned_long.getCPtr(value));
  }

  public SWIGTYPE_p_f_unsigned_long_p_q_const__unsigned_char_unsigned_int__unsigned_long getUpdate_checksum() {
    long cPtr = ffmpegJNI.AVIOContext_update_checksum_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_unsigned_long_p_q_const__unsigned_char_unsigned_int__unsigned_long(cPtr, false);
  }

  public void setError(int value) {
    ffmpegJNI.AVIOContext_error_set(swigCPtr, this, value);
  }

  public int getError() {
    return ffmpegJNI.AVIOContext_error_get(swigCPtr, this);
  }

  public void setRead_pause(SWIGTYPE_p_f_p_void_int__int value) {
    ffmpegJNI.AVIOContext_read_pause_set(swigCPtr, this, SWIGTYPE_p_f_p_void_int__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_int__int getRead_pause() {
    long cPtr = ffmpegJNI.AVIOContext_read_pause_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_int__int(cPtr, false);
  }

  public void setRead_seek(SWIGTYPE_p_f_p_void_int_long_long_int__long_long value) {
    ffmpegJNI.AVIOContext_read_seek_set(swigCPtr, this, SWIGTYPE_p_f_p_void_int_long_long_int__long_long.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_int_long_long_int__long_long getRead_seek() {
    long cPtr = ffmpegJNI.AVIOContext_read_seek_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_int_long_long_int__long_long(cPtr, false);
  }

  public void setSeekable(int value) {
    ffmpegJNI.AVIOContext_seekable_set(swigCPtr, this, value);
  }

  public int getSeekable() {
    return ffmpegJNI.AVIOContext_seekable_get(swigCPtr, this);
  }

  public AVIOContext() {
    this(ffmpegJNI.new_AVIOContext(), true);
  }

}
