/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVFilterPad {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVFilterPad(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVFilterPad obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVFilterPad(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setName(byte[] value) {
    ffmpegJNI.AVFilterPad_name_set(swigCPtr, value);
  }

  public byte[] getName() {
    return ffmpegJNI.AVFilterPad_name_get(swigCPtr);
  }

  public void setType(AVMediaType value) {
    ffmpegJNI.AVFilterPad_type_set(swigCPtr, value.swigValue());
  }

  public AVMediaType getType() {
    return AVMediaType.swigToEnum(ffmpegJNI.AVFilterPad_type_get(swigCPtr));
  }

  public void setMin_perms(int value) {
    ffmpegJNI.AVFilterPad_min_perms_set(swigCPtr, value);
  }

  public int getMin_perms() {
    return ffmpegJNI.AVFilterPad_min_perms_get(swigCPtr);
  }

  public void setRej_perms(int value) {
    ffmpegJNI.AVFilterPad_rej_perms_set(swigCPtr, value);
  }

  public int getRej_perms() {
    return ffmpegJNI.AVFilterPad_rej_perms_get(swigCPtr);
  }

  public void setStart_frame(SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void value) {
    ffmpegJNI.AVFilterPad_start_frame_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void getStart_frame() {
    long cPtr = ffmpegJNI.AVFilterPad_start_frame_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void(cPtr, false);
  }

  public void setGet_video_buffer(SWIGTYPE_p_f_p_AVFilterLink_int_int_int__p_AVFilterBufferRef value) {
    ffmpegJNI.AVFilterPad_get_video_buffer_set(swigCPtr, SWIGTYPE_p_f_p_AVFilterLink_int_int_int__p_AVFilterBufferRef.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_AVFilterLink_int_int_int__p_AVFilterBufferRef getGet_video_buffer() {
    long cPtr = ffmpegJNI.AVFilterPad_get_video_buffer_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_AVFilterLink_int_int_int__p_AVFilterBufferRef(cPtr, false);
  }

  public void setGet_audio_buffer(SWIGTYPE_p_f_p_AVFilterLink_int_int__p_AVFilterBufferRef value) {
    ffmpegJNI.AVFilterPad_get_audio_buffer_set(swigCPtr, SWIGTYPE_p_f_p_AVFilterLink_int_int__p_AVFilterBufferRef.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_AVFilterLink_int_int__p_AVFilterBufferRef getGet_audio_buffer() {
    long cPtr = ffmpegJNI.AVFilterPad_get_audio_buffer_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_AVFilterLink_int_int__p_AVFilterBufferRef(cPtr, false);
  }

  public void setEnd_frame(SWIGTYPE_p_f_p_struct_AVFilterLink__void value) {
    ffmpegJNI.AVFilterPad_end_frame_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink__void getEnd_frame() {
    long cPtr = ffmpegJNI.AVFilterPad_end_frame_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink__void(cPtr, false);
  }

  public void setDraw_slice(SWIGTYPE_p_f_p_struct_AVFilterLink_int_int_int__void value) {
    ffmpegJNI.AVFilterPad_draw_slice_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink_int_int_int__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink_int_int_int__void getDraw_slice() {
    long cPtr = ffmpegJNI.AVFilterPad_draw_slice_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink_int_int_int__void(cPtr, false);
  }

  public void setFilter_samples(SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void value) {
    ffmpegJNI.AVFilterPad_filter_samples_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void getFilter_samples() {
    long cPtr = ffmpegJNI.AVFilterPad_filter_samples_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink_p_struct_AVFilterBufferRef__void(cPtr, false);
  }

  public void setPoll_frame(SWIGTYPE_p_f_p_struct_AVFilterLink__int value) {
    ffmpegJNI.AVFilterPad_poll_frame_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink__int getPoll_frame() {
    long cPtr = ffmpegJNI.AVFilterPad_poll_frame_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink__int(cPtr, false);
  }

  public void setRequest_frame(SWIGTYPE_p_f_p_struct_AVFilterLink__int value) {
    ffmpegJNI.AVFilterPad_request_frame_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink__int getRequest_frame() {
    long cPtr = ffmpegJNI.AVFilterPad_request_frame_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink__int(cPtr, false);
  }

  public void setConfig_props(SWIGTYPE_p_f_p_struct_AVFilterLink__int value) {
    ffmpegJNI.AVFilterPad_config_props_set(swigCPtr, SWIGTYPE_p_f_p_struct_AVFilterLink__int.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_struct_AVFilterLink__int getConfig_props() {
    long cPtr = ffmpegJNI.AVFilterPad_config_props_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_AVFilterLink__int(cPtr, false);
  }

  public AVFilterPad() {
    this(ffmpegJNI.new_AVFilterPad(), true);
  }

}
