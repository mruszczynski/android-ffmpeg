/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVFilterContext {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVFilterContext(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVFilterContext obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVFilterContext(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setAv_class(SWIGTYPE_p_AVClass value) {
    ffmpegJNI.AVFilterContext_av_class_set(swigCPtr, SWIGTYPE_p_AVClass.getCPtr(value));
  }

  public SWIGTYPE_p_AVClass getAv_class() {
    long cPtr = ffmpegJNI.AVFilterContext_av_class_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVClass(cPtr, false);
  }

  public void setFilter(AVFilter value) {
    ffmpegJNI.AVFilterContext_filter_set(swigCPtr, AVFilter.getCPtr(value), value);
  }

  public AVFilter getFilter() {
    long cPtr = ffmpegJNI.AVFilterContext_filter_get(swigCPtr);
    return (cPtr == 0) ? null : new AVFilter(cPtr, false);
  }

  public void setName(String value) {
    ffmpegJNI.AVFilterContext_name_set(swigCPtr, value);
  }

  public String getName() {
    return ffmpegJNI.AVFilterContext_name_get(swigCPtr);
  }

  public void setInput_count(long value) {
    ffmpegJNI.AVFilterContext_input_count_set(swigCPtr, value);
  }

  public long getInput_count() {
    return ffmpegJNI.AVFilterContext_input_count_get(swigCPtr);
  }

  public void setInput_pads(SWIGTYPE_p_AVFilterPad value) {
    ffmpegJNI.AVFilterContext_input_pads_set(swigCPtr, SWIGTYPE_p_AVFilterPad.getCPtr(value));
  }

  public SWIGTYPE_p_AVFilterPad getInput_pads() {
    long cPtr = ffmpegJNI.AVFilterContext_input_pads_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVFilterPad(cPtr, false);
  }

  public void setInputs(SWIGTYPE_p_p_AVFilterLink value) {
    ffmpegJNI.AVFilterContext_inputs_set(swigCPtr, SWIGTYPE_p_p_AVFilterLink.getCPtr(value));
  }

  public SWIGTYPE_p_p_AVFilterLink getInputs() {
    long cPtr = ffmpegJNI.AVFilterContext_inputs_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_AVFilterLink(cPtr, false);
  }

  public void setOutput_count(long value) {
    ffmpegJNI.AVFilterContext_output_count_set(swigCPtr, value);
  }

  public long getOutput_count() {
    return ffmpegJNI.AVFilterContext_output_count_get(swigCPtr);
  }

  public void setOutput_pads(SWIGTYPE_p_AVFilterPad value) {
    ffmpegJNI.AVFilterContext_output_pads_set(swigCPtr, SWIGTYPE_p_AVFilterPad.getCPtr(value));
  }

  public SWIGTYPE_p_AVFilterPad getOutput_pads() {
    long cPtr = ffmpegJNI.AVFilterContext_output_pads_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVFilterPad(cPtr, false);
  }

  public void setOutputs(SWIGTYPE_p_p_AVFilterLink value) {
    ffmpegJNI.AVFilterContext_outputs_set(swigCPtr, SWIGTYPE_p_p_AVFilterLink.getCPtr(value));
  }

  public SWIGTYPE_p_p_AVFilterLink getOutputs() {
    long cPtr = ffmpegJNI.AVFilterContext_outputs_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_AVFilterLink(cPtr, false);
  }

  public void setPriv(SWIGTYPE_p_void value) {
    ffmpegJNI.AVFilterContext_priv_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getPriv() {
    long cPtr = ffmpegJNI.AVFilterContext_priv_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setCommand_queue(SWIGTYPE_p_AVFilterCommand value) {
    ffmpegJNI.AVFilterContext_command_queue_set(swigCPtr, SWIGTYPE_p_AVFilterCommand.getCPtr(value));
  }

  public SWIGTYPE_p_AVFilterCommand getCommand_queue() {
    long cPtr = ffmpegJNI.AVFilterContext_command_queue_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_AVFilterCommand(cPtr, false);
  }

  public AVFilterContext() {
    this(ffmpegJNI.new_AVFilterContext(), true);
  }

}
