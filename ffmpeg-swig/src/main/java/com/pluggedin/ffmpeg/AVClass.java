/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class AVClass {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected AVClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AVClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_AVClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setClass_name(String value) {
    ffmpegJNI.AVClass_class_name_set(swigCPtr, this, value);
  }

  public String getClass_name() {
    return ffmpegJNI.AVClass_class_name_get(swigCPtr, this);
  }

  public void setItem_name(SWIGTYPE_p_f_p_void__p_char value) {
    ffmpegJNI.AVClass_item_name_set(swigCPtr, this, SWIGTYPE_p_f_p_void__p_char.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void__p_char getItem_name() {
    long cPtr = ffmpegJNI.AVClass_item_name_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void__p_char(cPtr, false);
  }

  public void setOption(AVOption value) {
    ffmpegJNI.AVClass_option_set(swigCPtr, this, AVOption.getCPtr(value), value);
  }

  public AVOption getOption() {
    long cPtr = ffmpegJNI.AVClass_option_get(swigCPtr, this);
    return (cPtr == 0) ? null : new AVOption(cPtr, false);
  }

  public void setVersion(int value) {
    ffmpegJNI.AVClass_version_set(swigCPtr, this, value);
  }

  public int getVersion() {
    return ffmpegJNI.AVClass_version_get(swigCPtr, this);
  }

  public void setLog_level_offset_offset(int value) {
    ffmpegJNI.AVClass_log_level_offset_offset_set(swigCPtr, this, value);
  }

  public int getLog_level_offset_offset() {
    return ffmpegJNI.AVClass_log_level_offset_offset_get(swigCPtr, this);
  }

  public void setParent_log_context_offset(int value) {
    ffmpegJNI.AVClass_parent_log_context_offset_set(swigCPtr, this, value);
  }

  public int getParent_log_context_offset() {
    return ffmpegJNI.AVClass_parent_log_context_offset_get(swigCPtr, this);
  }

  public void setChild_next(SWIGTYPE_p_f_p_void_p_void__p_void value) {
    ffmpegJNI.AVClass_child_next_set(swigCPtr, this, SWIGTYPE_p_f_p_void_p_void__p_void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void_p_void__p_void getChild_next() {
    long cPtr = ffmpegJNI.AVClass_child_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void_p_void__p_void(cPtr, false);
  }

  public void setChild_class_next(SWIGTYPE_p_f_p_q_const__struct_AVClass__p_AVClass value) {
    ffmpegJNI.AVClass_child_class_next_set(swigCPtr, this, SWIGTYPE_p_f_p_q_const__struct_AVClass__p_AVClass.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_q_const__struct_AVClass__p_AVClass getChild_class_next() {
    long cPtr = ffmpegJNI.AVClass_child_class_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_q_const__struct_AVClass__p_AVClass(cPtr, false);
  }

  public void setCategory(AVClassCategory value) {
    ffmpegJNI.AVClass_category_set(swigCPtr, this, value.swigValue());
  }

  public AVClassCategory getCategory() {
    return AVClassCategory.swigToEnum(ffmpegJNI.AVClass_category_get(swigCPtr, this));
  }

  public void setGet_category(SWIGTYPE_p_f_p_void__AVClassCategory value) {
    ffmpegJNI.AVClass_get_category_set(swigCPtr, this, SWIGTYPE_p_f_p_void__AVClassCategory.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void__AVClassCategory getGet_category() {
    long cPtr = ffmpegJNI.AVClass_get_category_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void__AVClassCategory(cPtr, false);
  }

  public AVClass() {
    this(ffmpegJNI.new_AVClass(), true);
  }

}
