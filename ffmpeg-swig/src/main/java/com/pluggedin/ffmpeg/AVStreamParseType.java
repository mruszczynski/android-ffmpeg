/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public enum AVStreamParseType {
  AVSTREAM_PARSE_NONE,
  AVSTREAM_PARSE_FULL,
  AVSTREAM_PARSE_HEADERS,
  AVSTREAM_PARSE_TIMESTAMPS,
  AVSTREAM_PARSE_FULL_ONCE,
  AVSTREAM_PARSE_FULL_RAW(CodecUtil.makeCodecTag(0,'R','A','W'));

  public final int swigValue() {
    return swigValue;
  }

  public static AVStreamParseType swigToEnum(int swigValue) {
    AVStreamParseType[] swigValues = AVStreamParseType.class.getEnumConstants();
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (AVStreamParseType swigEnum : swigValues)
      if (swigEnum.swigValue == swigValue)
        return swigEnum;
    throw new IllegalArgumentException("No enum " + AVStreamParseType.class + " with value " + swigValue);
  }

  @SuppressWarnings("unused")
  private AVStreamParseType() {
    this.swigValue = SwigNext.next++;
  }

  @SuppressWarnings("unused")
  private AVStreamParseType(int swigValue) {
    this.swigValue = swigValue;
    SwigNext.next = swigValue+1;
  }

  @SuppressWarnings("unused")
  private AVStreamParseType(AVStreamParseType swigEnum) {
    this.swigValue = swigEnum.swigValue;
    SwigNext.next = this.swigValue+1;
  }

  private final int swigValue;

  private static class SwigNext {
    private static int next = 0;
  }
}

