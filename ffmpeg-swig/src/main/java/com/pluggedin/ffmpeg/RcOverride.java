/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.pluggedin.ffmpeg;

public class RcOverride {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected RcOverride(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RcOverride obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ffmpegJNI.delete_RcOverride(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setStart_frame(int value) {
    ffmpegJNI.RcOverride_start_frame_set(swigCPtr, this, value);
  }

  public int getStart_frame() {
    return ffmpegJNI.RcOverride_start_frame_get(swigCPtr, this);
  }

  public void setEnd_frame(int value) {
    ffmpegJNI.RcOverride_end_frame_set(swigCPtr, this, value);
  }

  public int getEnd_frame() {
    return ffmpegJNI.RcOverride_end_frame_get(swigCPtr, this);
  }

  public void setQscale(int value) {
    ffmpegJNI.RcOverride_qscale_set(swigCPtr, this, value);
  }

  public int getQscale() {
    return ffmpegJNI.RcOverride_qscale_get(swigCPtr, this);
  }

  public void setQuality_factor(float value) {
    ffmpegJNI.RcOverride_quality_factor_set(swigCPtr, this, value);
  }

  public float getQuality_factor() {
    return ffmpegJNI.RcOverride_quality_factor_get(swigCPtr, this);
  }

  public RcOverride() {
    this(ffmpegJNI.new_RcOverride(), true);
  }

}
